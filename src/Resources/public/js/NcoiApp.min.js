"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var NcoiApp = /*#__PURE__*/function () {
  function NcoiApp($) {
    _classCallCheck(this, NcoiApp);

    this.$ = $;
  }

  _createClass(NcoiApp, [{
    key: "getMainWrapper",
    value: function getMainWrapper() {
      var $ = this.$;
      return $('.ncoi---behind');
    }
  }, {
    key: "getStorageKey",
    value: function getStorageKey() {
      var $ = this.$;
      return 'ncoi_' + $('[data-ncoi-mod-id]').data('ncoi-mod-id');
    }
  }, {
    key: "getLocalStorage",
    value: function getLocalStorage(storageKey) {
      var storageData = localStorage.getItem(storageKey);

      if (storageData !== 'null' && storageData !== null) {
        return JSON.parse(storageData);
      }

      return '';
    }
  }, {
    key: "setLocalStorage",
    value: function setLocalStorage(storageKey, storageValue) {
      localStorage.setItem(storageKey, storageValue);
    }
  }]);

  return NcoiApp;
}();

(function ($, NcoiApp) {
  $(document).ready(function () {
    var ncoiApp = new NcoiApp($);
    var mainWrapper = ncoiApp.getMainWrapper();
    var ncoiRevoke = new NcoiRevoke($);
    var storageKey = ncoiApp.getStorageKey();
    var ncoiLoad = new NcoiLoad($);

    if (ncoiLoad.doNotTrackByBrowserSetting(storageKey, mainWrapper)) {
      mainWrapper.addClass('ncoi---hidden');
      return;
    }

    var localStorage = ncoiApp.getLocalStorage(storageKey);
    ncoiRevoke.addOnClickEvent(storageKey);
    ncoiLoad.removeLoadAlwaysForNoScript();
    ncoiLoad.showAllMissingModuleMessage();
    ncoiLoad.removeNoScriptInputs();
    var ncoiButtons = new NcoiButtons($);
    var ncoiTrack = new NcoiTrack($);
    ncoiButtons.addOnClickEvents(storageKey, mainWrapper);
    var ncoiExternalMedia = new NcoiExternalMedia($);
    ncoiExternalMedia.addOnClickEvent(storageKey);
    ncoiExternalMedia.onChangeSliding();
    var ncoiInfoTable = new NcoiInfoTable($);
    ncoiInfoTable.addOnClickShowEvent();
    ncoiInfoTable.onChangeGroupActive();
    ncoiInfoTable.onChangeCookieActive();
    var ncoiCookie = new NcoiCookie($);
    var isExcludePage = mainWrapper.find('.ncoi---container').data('is-exclude-page');

    if (isExcludePage === 1) {
      mainWrapper.addClass('ncoi---hidden');
      return;
    }

    var optOut = $('[data-ncoi-opt-out]').data('ncoi-opt-out');

    if (localStorage === '' && optOut === 'default') {
      $('#ncoi---allowed--all').trigger('click');
      localStorage = ncoiApp.getLocalStorage(storageKey);
      ncoiTrack.track(0, storageKey, localStorage, optOut);
      ncoiExternalMedia.decode(storageKey);
      ncoiInfoTable.setCookieCheckboxes(localStorage.cookieIds);
      mainWrapper.addClass('ncoi---hidden');
      return;
    }

    if (ncoiLoad.isLocalStorageUpToDate(localStorage, storageKey, mainWrapper)) {
      ncoiTrack.track(0, storageKey, localStorage, optOut);
      ncoiExternalMedia.decode(storageKey);
      ncoiInfoTable.setCookieCheckboxes(localStorage.cookieIds);
      mainWrapper.addClass('ncoi---hidden');
    } else {
      ncoiCookie.ajaxDeleteCookies(storageKey);
      ncoiCookie.removeCookies(Cookies.get());
      mainWrapper.removeClass('ncoi---hidden');
    }
  });
})(jQuery, NcoiApp);
