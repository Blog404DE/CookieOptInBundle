"use strict";

function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

var NcoiInfoTable = /*#__PURE__*/function () {
  function NcoiInfoTable($) {
    _classCallCheck(this, NcoiInfoTable);

    this.$ = $;
  }

  _createClass(NcoiInfoTable, [{
    key: "setCookieCheckboxes",
    value: function setCookieCheckboxes(cookieIds) {
      var $ = this.$;

      if ((typeof cookieId === "undefined" ? "undefined" : _typeof(cookieId)) !== undefined) {
        cookieIds.forEach(function (cookieId) {
          $('.ncoi---cookie-id-' + cookieId).prop('checked');
        });
      }
    }
  }, {
    key: "addOnClickShowEvent",
    value: function addOnClickShowEvent() {
      var $ = this.$;
      $(document).on('click', '#ncoi---infos--show', function (e) {
        e.preventDefault();
        $('.ncoi---cookie-groups').toggleClass('ncoi---hidden');
        $('.ncoi---hint').toggleClass('ncoi---hidden');
        $('.ncoi---table').toggleClass('ncoi---hidden');
        $('.ncoi---infos--show-active').toggleClass('ncoi---hidden');
        $('.ncoi---infos--show-deactivate').toggleClass('ncoi---hidden');
      });
    }
  }, {
    key: "onChangeGroupActive",
    value: function onChangeGroupActive() {
      var $ = this.$;
      $(document).on('click', '.ncoi---sliding-input', function () {
        var group = $(this);
        $('.ncoi---cookie').each(function () {
          var cookie = $(this).data('group');
          if (group.val().localeCompare(cookie) === 0) $(this).prop('checked', group.prop('checked'));
        });
      });
    }
  }, {
    key: "onChangeCookieActive",
    value: function onChangeCookieActive() {
      var $ = this.$;
      $(document).on('click', '.ncoi---cookie', function () {
        var cookie = $(this).data('group');
        var allChecked = true;
        var id = $(this).data('cookie-id');
        var checked = $(this).prop('checked');
        var inputInBlockContainer = $('.ncoi---cookie-id-' + id).find('.ncoi---sliding');
        inputInBlockContainer.prop('checked', checked);
        $('.ncoi---cookie').each(function () {
          var group = $(this).data('group');
          if (cookie === group && !checked) allChecked = false;
        });
        $('.ncoi---cookie-group input').each(function () {
          var group = $(this).val();
          if (group.localeCompare(cookie) === 0) $(this).prop('checked', allChecked);
        });
      });
    }
  }]);

  return NcoiInfoTable;
}();
