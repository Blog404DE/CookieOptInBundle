"use strict";

function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

var _NcoiMatomoTemplate = /*#__PURE__*/function (_NcoiTemplate) {
  _inherits(_NcoiMatomoTemplate, _NcoiTemplate);

  var _super = _createSuper(_NcoiMatomoTemplate);

  function _NcoiMatomoTemplate() {
    _classCallCheck(this, _NcoiMatomoTemplate);

    return _super.apply(this, arguments);
  }

  _createClass(_NcoiMatomoTemplate, [{
    key: "setCookies",
    value: function setCookies(tool, body) {
      if (this.hasContaoTemplate()) {
        this.addContaoTemplate();
      } else {
        this.executeDefault(tool, body);
      }
    }
  }, {
    key: "hasContaoTemplate",
    value: function hasContaoTemplate() {
      var script = this.getScript();
      var wrapper = this.getWrapper();
      return script.length > 0 && wrapper.length === 0;
    }
  }, {
    key: "addContaoTemplate",
    value: function addContaoTemplate() {
      var script = this.getScript();
      var templateScriptsEncode = script.html();
      templateScriptsEncode = templateScriptsEncode.replace('<!--', '');
      templateScriptsEncode = templateScriptsEncode.replace('-->', '');

      try {
        templateScriptsEncode = atob(templateScriptsEncode);
      } catch (e) {
        console.error('Das Analyse Template enth√§lt invalide Zeichen.');
      }

      script.after(templateScriptsEncode);
    }
  }, {
    key: "executeDefault",
    value: function executeDefault(tool, body) {
      var trackingId = this.getTrackingId(tool);
      var url = this.getUrl(tool);
      body.append("<script type=\"text/javascript\">" + "var _paq = window._paq || [];" + "_paq.push(['trackPageView']);" + "_paq.push(['enableLinkTracking']);" + "(function() {" + "var u = '" + url + "';" + "_paq.push(['setTrackerUrl', u+'matomo.php']);" + "_paq.push(['setSiteId', '" + trackingId + "']);" + "var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];" + "g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);" + "})();" + "</script>");
    }
  }, {
    key: "getWrapper",
    value: function getWrapper() {
      var $ = this.$;
      return $('.analytics-decoded-matomo');
    }
  }, {
    key: "getScript",
    value: function getScript() {
      var $ = this.$;
      return $('#analytics-encoded-matomo');
    }
  }, {
    key: "remove",
    value: function remove() {
      var wrapperGoogle = this.getWrapper();
      if (wrapperGoogle !== null) wrapperGoogle.remove();
    }
  }]);

  return _NcoiMatomoTemplate;
}(NcoiTemplate);
