"use strict";

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

var NcoiExternalMedia = /*#__PURE__*/function () {
  function NcoiExternalMedia($) {
    _classCallCheck(this, NcoiExternalMedia);

    this.$ = $;
  }

  _createClass(NcoiExternalMedia, [{
    key: "addOnClickEvent",
    value: function addOnClickEvent(storageKey) {
      var $ = this.$;
      var that = this;
      $(document).on('click', '.ncoi---release', function (e) {
        e.preventDefault(); //Um richtige Chechbox zu finden
        //und um Blockcontainer vielleicht auszublenden und iFrame anzuhängen

        var parent = $(this).parents('.ncoi---blocked');
        var input = parent.find('.ncoi---sliding');
        var blockClass = $('[data-block-class="' + input.data('block-class') + '"]');

        if (input.prop('checked')) {
          //In der Info Tabelle entsprechen checken damit über track() gespeichert werden kann.
          blockClass.prop('checked', true).trigger('change');
          var inputClass = input.data('block-class') + "";
          var blockClassIds = $('[data-block-class="ncoi---' + inputClass + '"]');
          blockClassIds.prop('checked', true).trigger('change');
          var ncoiTrack = new NcoiTrack($);
          ncoiTrack.track(1, storageKey);
          that.decode(storageKey);
          var parents = $('.' + input.data('block-class'));
          parents.each(function () {
            that.addIframe($(this));
          });
        } else {
          if (that.isCustomGmap(parent)) {
            that.showCustomGmap(parent);
          } else {
            that.addIframe(parent);
            parent.trigger('change');
          }
        }
      });
    }
  }, {
    key: "onChangeSliding",
    value: function onChangeSliding() {
      var $ = this.$;
      $(document).on('click', '.ncoi---sliding.ncoi---blocked', function () {
        var checked = $(this).prop('checked');
        var ids = $(this).data('cookie-ids') + '';

        if (ids.indexOf(',') > 0) {
          ids = ids.split(',');
          ids.forEach(function (id) {
            $('#ncoi---table-cookie-' + id).prop('checked', checked);
          });
        } else {
          $('#ncoi---table-cookie-' + ids).prop('checked', checked);
        }
      });
    }
  }, {
    key: "decode",
    value: function decode(storageKey) {
      var that = this;
      var $ = that.$;
      var ncoiApp = new NcoiApp($);
      var localStorage = ncoiApp.getLocalStorage(storageKey);
      var cookieIds = localStorage.cookieIds;
      $('.ncoi---blocked').each(function (key, value) {
        var iframe = $(this);
        cookieIds.forEach(function (cookieId) {
          if ($(value).hasClass('ncoi---cookie-id-' + cookieId)) {
            if (iframe.length > 0) {
              if (that.isCustomGmap(iframe)) {
                that.showCustomGmap(iframe);
              } else {
                that.addIframe(iframe);
                iframe.trigger('change');
              }
            }
          }
        });
      });
    }
  }, {
    key: "showCustomGmap",
    value: function showCustomGmap() {
      var $ = this.$;
      $('.ce_google_map').removeClass('ncoi---hidden');
      $('.mod_catalogUniversalView').removeClass('ncoi---hidden');
      $('.ncoi---custom_gmap').addClass('ncoi---hidden');
    }
  }, {
    key: "isCustomGmap",
    value: function isCustomGmap(iframe) {
      var customGmap = iframe.parent('.ncoi---custom_gmap');
      return customGmap.length > 0;
    }
  }, {
    key: "addIframe",
    value: function addIframe(parent) {
      var $ = this.$;

      if (!parent.hasClass('ncoi---hidden')) {
        var html = '';

        if (parent.length > 1) {
          for (var i = 0; i < parent.length; i++) {
            $('.' + parent[i].classList[3]).each(function () {
              html = $(this).find('script').text().trim();
            });
          }
        } else {
          html = parent.find('script').text().trim();
        }

        parent.addClass('ncoi---hidden');
        if (html.indexOf('data-only-script') >= 0) $('head').append(html);else parent.after(html);
      }
    }
  }]);

  return NcoiExternalMedia;
}();
